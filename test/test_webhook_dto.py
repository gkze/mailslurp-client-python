# coding: utf-8

"""
    MailSlurp API

    ## Introduction  [MailSlurp](https://www.mailslurp.com) is an Email API for developers and QA testers. It let's users: - create emails addresses on demand - receive emails and attachments in code - send templated HTML emails  ## About  This page contains the REST API documentation for MailSlurp. All requests require API Key authentication passed as an `x-api-key` header.  Create an account to [get your free API Key](https://app.mailslurp.com/sign-up/).  ## Resources - üîë [Get API Key](https://app.mailslurp.com/sign-up/)                    - üéì [Developer Portal](https://www.mailslurp.com/docs/)           - üì¶ [Library SDKs](https://www.mailslurp.com/docs/) - ‚úçÔ∏è [Code Examples](https://www.mailslurp.com/examples) - ‚ö†Ô∏è [Report an issue](https://drift.me/mailslurp)  ## Explore    # noqa: E501

    The version of the OpenAPI document: 6.5.2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mailslurp_client
from mailslurp_client.models.webhook_dto import WebhookDto  # noqa: E501
from mailslurp_client.rest import ApiException

class TestWebhookDto(unittest.TestCase):
    """WebhookDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test WebhookDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = mailslurp_client.models.webhook_dto.WebhookDto()  # noqa: E501
        if include_optional :
            return WebhookDto(
                basic_auth = True, 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                id = '0', 
                inbox_id = '0', 
                method = 'GET', 
                name = '0', 
                payload_json_schema = '0', 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                url = '0'
            )
        else :
            return WebhookDto(
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )

    def testWebhookDto(self):
        """Test WebhookDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
