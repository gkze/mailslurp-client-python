# coding: utf-8

"""
    MailSlurp API

    ## Introduction  [MailSlurp](https://www.mailslurp.com) is an Email API for developers and QA testers. It let's users: - create emails addresses on demand - receive emails and attachments in code - send templated HTML emails  ## About  This page contains the REST API documentation for MailSlurp. All requests require API Key authentication passed as an `x-api-key` header.  Create an account to [get your free API Key](https://app.mailslurp.com/sign-up/).  ## Resources - üîë [Get API Key](https://app.mailslurp.com/sign-up/)                    - üéì [Developer Portal](https://www.mailslurp.com/docs/)           - üì¶ [Library SDKs](https://www.mailslurp.com/docs/) - ‚úçÔ∏è [Code Examples](https://www.mailslurp.com/examples) - ‚ö†Ô∏è [Report an issue](https://drift.me/mailslurp)  ## Explore    # noqa: E501

    The version of the OpenAPI document: 6.5.2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mailslurp_client
from mailslurp_client.models.contact_dto import ContactDto  # noqa: E501
from mailslurp_client.rest import ApiException

class TestContactDto(unittest.TestCase):
    """ContactDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ContactDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = mailslurp_client.models.contact_dto.ContactDto()  # noqa: E501
        if include_optional :
            return ContactDto(
                company = '0', 
                email_addresses = [
                    '0'
                    ], 
                first_name = '0', 
                id = '0', 
                last_name = '0', 
                meta_data = mailslurp_client.models.json_node.JsonNode(
                    array = True, 
                    big_decimal = True, 
                    big_integer = True, 
                    binary = True, 
                    boolean = True, 
                    container_node = True, 
                    double = True, 
                    empty = True, 
                    float = True, 
                    floating_point_number = True, 
                    int = True, 
                    integral_number = True, 
                    long = True, 
                    missing_node = True, 
                    node_type = 'ARRAY', 
                    null = True, 
                    number = True, 
                    object = True, 
                    pojo = True, 
                    short = True, 
                    textual = True, 
                    value_node = True, ), 
                opt_out = True, 
                tags = [
                    '0'
                    ]
            )
        else :
            return ContactDto(
                email_addresses = [
                    '0'
                    ],
                id = '0',
                tags = [
                    '0'
                    ],
        )

    def testContactDto(self):
        """Test ContactDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
